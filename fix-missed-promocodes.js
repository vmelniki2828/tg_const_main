#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node fix-missed-promocodes.js <botId>
 */

const axios = require('axios');

async function fixMissedPromoCodes(botId) {
  try {
    console.log(`üîß –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –¥–ª—è –±–æ—Ç–∞ ${botId}`);
    
    const response = await axios.post(`http://localhost:3001/api/fix-missed-loyalty-promocodes/${botId}`);
    
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`   - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${response.data.statistics.totalUsers}`);
    console.log(`   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${response.data.statistics.fixedUsers}`);
    console.log(`   - –í—ã–¥–∞–Ω–æ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤: ${response.data.statistics.totalPromoCodesGiven}`);
    
    if (response.data.results.length > 0) {
      console.log('\nüìã –î–µ—Ç–∞–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:');
      response.data.results.forEach((result, index) => {
        console.log(`\n${index + 1}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${result.userId} (${result.username || result.firstName || '–±–µ–∑ –∏–º–µ–Ω–∏'})`);
        console.log(`   - –í—ã–¥–∞–Ω–æ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤: ${result.promoCodesGiven}`);
        
        if (result.results) {
          result.results.forEach(periodResult => {
            if (periodResult.status === 'given') {
              console.log(`   ‚úÖ ${periodResult.period}: ${periodResult.promoCode}`);
            } else if (periodResult.status === 'no_available') {
              console.log(`   ‚ö†Ô∏è ${periodResult.period}: –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤`);
            } else if (periodResult.status === 'already_given') {
              console.log(`   ‚ÑπÔ∏è ${periodResult.period}: —É–∂–µ –±—ã–ª –≤—ã–¥–∞–Ω`);
            } else if (periodResult.status === 'error') {
              console.log(`   ‚ùå ${periodResult.period}: –æ—à–∏–±–∫–∞ - ${periodResult.error}`);
            }
          });
        }
        
        if (result.error) {
          console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${result.error}`);
        }
      });
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:', error.message);
    if (error.response) {
      console.error('üìÑ –î–µ—Ç–∞–ª–∏ –æ—Ç–≤–µ—Ç–∞:', error.response.data);
    }
  }
}

// –ü–æ–ª—É—á–∞–µ–º botId –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const botId = process.argv[2];

if (!botId) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω botId');
  console.log('üìñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node fix-missed-promocodes.js <botId>');
  console.log('üìñ –ü—Ä–∏–º–µ—Ä: node fix-missed-promocodes.js bot123');
  process.exit(1);
}

console.log(`üöÄ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –¥–ª—è –±–æ—Ç–∞: ${botId}`);
fixMissedPromoCodes(botId);
