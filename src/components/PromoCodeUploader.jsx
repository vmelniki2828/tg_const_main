import React, { useState } from 'react';
import './PromoCodeUploader.css';
import config from '../config';

const PromoCodeUploader = ({ onClose }) => {
  const [file, setFile] = useState(null);
  const [isUploading, setIsUploading] = useState(false);
  const [message, setMessage] = useState('');
  const [error, setError] = useState('');

  const handleFileChange = (e) => {
    const selectedFile = e.target.files[0];
    if (selectedFile) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ CSV —Ñ–∞–π–ª
      if (selectedFile.type === 'text/csv' || selectedFile.name.endsWith('.csv')) {
        setFile(selectedFile);
        setError('');
        setMessage('');
      } else {
        setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ CSV —Ñ–∞–π–ª');
        setFile(null);
      }
    }
  };

  const handleUpload = async () => {
    if (!file) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª');
      return;
    }

    setIsUploading(true);
    setError('');
    setMessage('');

    const formData = new FormData();
    formData.append('promocodes', file);

    try {
      const response = await fetch(`${config.API_BASE_URL}/api/upload-promocodes`, {
        method: 'POST',
        body: formData,
      });

      const data = await response.json();

      if (response.ok) {
        setMessage(`‚úÖ ${data.message}`);
        setFile(null);
        // –û—á–∏—â–∞–µ–º input
        document.getElementById('file-input').value = '';
      } else {
        setError(`‚ùå ${data.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞'}`);
      }
    } catch (err) {
      setError('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
      console.error('Upload error:', err);
    } finally {
      setIsUploading(false);
    }
  };

  return (
    <div className="promo-uploader-overlay">
      <div className="promo-uploader-modal">
        <div className="promo-uploader-header">
          <h2>üéÅ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤</h2>
          <button onClick={onClose} className="close-btn">
            ‚úï
          </button>
        </div>

        <div className="promo-uploader-content">
          <div className="upload-instructions">
            <h3>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h3>
            <ul>
              <li>–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV</li>
              <li>–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–∞: <code>Code, User, Activated</code></li>
              <li>–ü–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü - –∫–æ–¥ –ø—Ä–æ–º–æ–∫–æ–¥–∞</li>
              <li>–í—Ç–æ—Ä–æ–π —Å—Ç–æ–ª–±–µ—Ü - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)</li>
              <li>–¢—Ä–µ—Ç–∏–π —Å—Ç–æ–ª–±–µ—Ü - —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ (0 - –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, 1 - –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω)</li>
            </ul>
          </div>

          <div className="file-upload-section">
            <input
              id="file-input"
              type="file"
              accept=".csv"
              onChange={handleFileChange}
              className="file-input"
            />
            <label htmlFor="file-input" className="file-input-label">
              {file ? `üìÅ ${file.name}` : 'üìÅ –í—ã–±–µ—Ä–∏—Ç–µ CSV —Ñ–∞–π–ª'}
            </label>
          </div>

          {error && (
            <div className="error-message">
              {error}
            </div>
          )}

          {message && (
            <div className="success-message">
              {message}
            </div>
          )}

          <div className="upload-actions">
            <button
              onClick={handleUpload}
              disabled={!file || isUploading}
              className="upload-btn"
            >
              {isUploading ? '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...' : 'üöÄ –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã'}
            </button>
            <button
              onClick={onClose}
              disabled={isUploading}
              className="cancel-btn"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PromoCodeUploader; 