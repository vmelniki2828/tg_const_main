#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node resend-promocode-messages.js <botId>
 */

const axios = require('axios');

async function resendPromocodeMessages(botId) {
  try {
    console.log(`üì® –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏ –¥–ª—è –±–æ—Ç–∞ ${botId}`);
    
    const response = await axios.post(`http://localhost:3001/api/resend-loyalty-promocode-messages/${botId}`);
    
    console.log('‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`   - –í—Å–µ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤: ${response.data.statistics.totalPromoCodes}`);
    console.log(`   - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${response.data.statistics.messagesSent}`);
    console.log(`   - –û—à–∏–±–æ–∫: ${response.data.statistics.errors}`);
    
    if (response.data.results.length > 0) {
      console.log('\nüìã –î–µ—Ç–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏:');
      response.data.results.forEach((result, index) => {
        console.log(`\n${index + 1}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${result.userId} (${result.userName})`);
        console.log(`   - –ü—Ä–æ–º–æ–∫–æ–¥–æ–≤: ${result.promoCodesCount}`);
        console.log(`   - –°—Ç–∞—Ç—É—Å: ${result.status === 'sent' ? '‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞'}`);
        
        if (result.status === 'sent' && result.promoCodes) {
          console.log(`   - –ü—Ä–æ–º–æ–∫–æ–¥—ã:`);
          result.promoCodes.forEach(promoCode => {
            const periodLabels = {
              '1m': '1 –º–∏–Ω—É—Ç–∞',
              '24h': '24 —á–∞—Å–∞', 
              '7d': '7 –¥–Ω–µ–π',
              '30d': '30 –¥–Ω–µ–π',
              '90d': '90 –¥–Ω–µ–π',
              '180d': '180 –¥–Ω–µ–π',
              '360d': '360 –¥–Ω–µ–π'
            };
            const periodLabel = periodLabels[promoCode.period] || promoCode.period;
            console.log(`     ‚Ä¢ ${periodLabel}: ${promoCode.code}`);
          });
        }
        
        if (result.status === 'error') {
          console.log(`   - –û—à–∏–±–∫–∞: ${result.error}`);
        }
      });
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π:', error.message);
    if (error.response) {
      console.error('üìÑ –î–µ—Ç–∞–ª–∏ –æ—Ç–≤–µ—Ç–∞:', error.response.data);
    }
  }
}

// –ü–æ–ª—É—á–∞–µ–º botId –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const botId = process.argv[2];

if (!botId) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω botId');
  console.log('üìñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node resend-promocode-messages.js <botId>');
  console.log('üìñ –ü—Ä–∏–º–µ—Ä: node resend-promocode-messages.js 1757891140598');
  process.exit(1);
}

console.log(`üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –±–æ—Ç–∞: ${botId}`);
resendPromocodeMessages(botId);
