version: '3.8'

services:
  # Backend сервис
  backend:
    build: .
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - CORS_ORIGIN=http://157.230.20.252:3000
    volumes:
      - ./backend/uploads:/app/backend/uploads
      - ./backend/promocodes:/app/backend/promocodes
      - ./backend/state.json:/app/backend/state.json
      - ./backend/editorState.json:/app/backend/editorState.json
      - ./backend/quizStats.json:/app/backend/quizStats.json
      - ./backend/backups:/app/backend/backups
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://157.230.20.252:3001/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend сервис
  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.frontend.simple
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://157.230.20.252:3001
      - REACT_APP_FRONTEND_URL=http://157.230.20.252:3000
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Nginx для проксирования
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 64M 